#!/usr/bin/env bash

set -eoux

SCRIPT_DIR=$(dirname "$0")

export DIR_CODE="$HOME/code"
export DIR_THIRD_PARTY="$HOME/third-party-packages"
export DIR_THIRD_PARTY_FONTS="$HOME/third-party-packages/fonts"
export DIR_THIRD_PARTY_WORK="$HOME/third-party-packages/dotfiles_install_work"
export DIR_NOTES_ROOT="$HOME/vaults"
export DIR_NOTES_WORK="$DIR_NOTES_ROOT/vaults-work"

# Pinned package versions
export TERRAFORM_VERSION="1.9.6"
export PACKER_VERSION="1.11.2"

export ZSH="$HOME/.oh-my-zsh"
export ZSH_CUSTOM="$ZSH/custom"

# Fonts
declare -a FONTS=(
	BitstreamVeraSansMono
	CodeNewRoman
	DroidSansMono
	FiraCode
	FiraMono
	Go-Mono
	Hack
	Hermit
	IosevkaTerm
	JetBrainsMono
	Meslo
	Noto
	Overpass
	ProggyClean
	RobotoMono
	SourceCodePro
	SpaceMono
	Ubuntu
	UbuntuMono
)
export FONTS

source "$SCRIPT_DIR/install_utils"
source "$SCRIPT_DIR/install_crossplatform"
source "$SCRIPT_DIR/install_arch"
source "$SCRIPT_DIR/install_ubuntu"
source "$SCRIPT_DIR/install_mac"

function main() {
	pretty_print "Installing everything..." "yellow"

	install_dirs

	# Platform-specific
	if [[ "$OSTYPE" == "linux-gnu"* ]]; then
		if grep -qi "arch" /etc/os-release; then
			pretty_print "Running on Arch Linux" "blue"

			arch_tune_makepkg
			arch_install_base_packages
			arch_install_yay
			if ! systemd-detect-virt --vm >/dev/null; then
				arch_install_virtualization
			fi
			arch_install_docker
			# arch_install_playwright_deps
			arch_install_aur_packages
		elif grep -qi "ubuntu" /etc/os-release; then
			pretty_print "Running on Ubuntu Linux" "blue"

			ubuntu_set_sources
			ubuntu_install_base_packages
			ubuntu_install_emacs
		else
			pretty_print "!!! Unsupported Linux distribution. Exiting..." "red"
			cat /etc/os-release
			exit 1
		fi

	elif [[ "$OSTYPE" == "darwin"* ]]; then
		pretty_print "Running on Mac" "blue"

		mac_set_system_settings
		mac_install_packages
	else
		pretty_print "!!! Unsupported operating system. Exiting..." "red"
		exit 1
	fi

	# Cross platform tools
	# install_alacritty
	pushd "$DIR_THIRD_PARTY_WORK"
	install_neovim
	install_yq
	install_golang
	install_fzf
	install_cmake
	install_ripgrep
	install_shellcheck
	install_awscli
	install_kubernetes_tools
	install_terraform
	install_packer
	install_additional_tools
	popd

	# Generic
	install_fonts
	install_git_repos
	install_tmux_tpm
	install_go_packages
	install_node_packages
	install_shell
	install_doom_emacs

	pretty_print "DONE installing everything." "green"
}

main
