#!/usr/bin/env bash

function pretty_print() {
	local message=$1
	local color=$2

	case $color in
	"red")
		echo -e "\033[31m--> $message\033[0m"
		;;
	"green")
		echo -e "\033[32mâœ“ $message\033[0m"
		;;
	"blue")
		echo -e "\033[34m--> $message\033[0m"
		;;
	"yellow")
		echo -e "\033[33m--> $message\033[0m"
		;;
	*)
		echo "$message"
		;;
	esac
}


function install_binary() {
        local name=$1
        local url=$2
        local destination=$3

        curl -Lo "$name" "$url"
        chmod +x "$name"
        sudo mv "$name" "$destination"
    }



# Function to check if a command exists
function command_exists() {
	command -v "$1" >/dev/null 2>&1
}

# NOTE(jesse): from: https://github.com/emilwojcik93/aur-boost/blob/main/aur-boost.sh
function findStringFn() {
	# grep values in file
	if grep -q "${1}" ${2}; then
		return 0
	else
		return 1
	fi
}

function git_clone() {
	repo=$1
	dest=$2

	if [ -z "$repo" ]; then
		pretty_print "!!! repo cannot be empty" "red"
		exit 1
	fi
	if [ -z "$dest" ]; then
		mkdir -p "$DIR_NOTES_PERSONAL"
		mkdir -p "$DIR_NOTES_WORK"
		dest=$(echo "$repo" | rev | cut -d "/" -f 1 | rev)
	fi

	echo "--> Cloning/Updating repo: '${repo}' to destination: '${dest}'"

	if [[ -d $dest ]]; then
		echo "--> ${dest} repo already exists, skipping..."
	else
		echo "--> ${dest} repo does not exist, cloning..."
		git clone --depth=1 "${repo}" "${dest}"
	fi
}
